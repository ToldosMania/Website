---
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import { BASE_URL } from "../toldosmania_info";

interface Props {
  title: string;
}
const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Website ToldosMania" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href={`${BASE_URL}/favicon.png`} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
     <script inline> function gtag_report_conversion(url) { var callback = function () { if (typeof(url) != 'undefined') { window.location = url; } }; gtag('event', 'conversion', { 'send_to': 'AW-995142058/DCanCMjqtV4QqtPC2gM', 'event_callback': callback }); return false; } </script> 
<!-- Google tag (gtag.js) --> <script async inline src="https://www.googletagmanager.com/gtag/js?id=AW-995142058"></script> <script inline> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'AW-995142058'); </script>     
    <link
      href="https://fonts.googleapis.com/css2?family=Noto+Sans&display=swap"
      rel="stylesheet"
    />
    <title>{title}</title>
  </head>
  <body class="min-h-screen">
    <Navbar />
    <slot />
    <Footer />
    <template id="zoom-template">
      <div class="z-0 h-10 w-10">
        <section data-zoom-container></section>
      </div>
      <div
        class="fixed bottom-0 left-0 right-0 top-auto z-50 flex flex-col items-center"
      >
        <div
          class="mb-6 max-h-56 max-w-screen-md rounded-xl border-4 border-base-200 bg-base-200 p-5 text-base-content shadow-xl"
        >
          <div class="flex flex-col lg:flex-row">
            <h1 class="text-md grow lg:text-2xl" id="zoom-template-title">
              Title Here
            </h1>
          </div>

          <p class="text-sm lg:text-xl" id="zoom-template-description">
            Description
          </p>
        </div>
      </div>
    </template>
    <script>
      import mediumZoom from "medium-zoom";

      let zoom = null;

      zoom = mediumZoom(".zoomable-item", {
        template: "#zoom-template",
      });

      const set_current_title = (text) => {
        document.querySelector("h1#zoom-template-title").innerHTML = text;
      };

      const set_current_description = (text) => {
        document.querySelector("p#zoom-template-description").innerHTML = text;
      };

      document.querySelectorAll("img.zoomable-item").forEach((button) => {
        button.addEventListener("click", () => {
          setTimeout(() => {
            if (button.dataset.description == undefined) {
              set_current_description("");
            } else {
              set_current_description(button.dataset.description);
            }
            set_current_title(button.alt);

            document
              .querySelectorAll("img.zoom-template-close")
              .forEach((button) => {
                button.addEventListener("click", () => {
                  zoom.close();
                });
              });
          }, 50);
        });
      });
    </script>
    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MZDXJ8W7" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->
    <style is:global>
      html {
        scroll-behavior: smooth;
      }
      body {
        font-family: "Noto Sans", sans-serif;
      }
      .medium-zoom-image--opened {
        z-index: 1;
      }
    </style>
  </body>
</html>
